buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven-publish'
apply plugin: "java"

version = "1.12.2-0.0.1"
group = "hellfirepvp.observerlib"
archivesBaseName = "observerlib"
String build_version = ""

// Most likely inside Jenkins. Or homebrew environment.
// I hope you know what you do if it's the latter.
if (System.getenv("BUILD_NUMBER") != null) {
    build_version = version + "-v" + System.getenv("BUILD_NUMBER")
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

compileApiJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

minecraft {
    version = "1.12.2-14.23.5.2813"
    runDir = "run"

    mappings = "snapshot_20180415"
}

repositories {

}

dependencies {

}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

//Sign jar from flatfile if present - local build
task signMainJarFile(type: SignJar, dependsOn: reobfJar) {
    onlyIf { // Skip the task if our secret data isn't available
        project.hasProperty('keyStore')
    }
    if (project.hasProperty('keyStore')) { // This needs to be a path to the keystore file
        keyStore = project.keyStore
        alias = project.alias
        storePass = project.storePass
        keyPass = project.keyPass
        inputFile = jar.archivePath
        outputFile = jar.archivePath
    }
}
build.dependsOn signMainJarFile

task deobfJar(type: Jar) {
    from(sourceSets.main.output)
    archiveName = "${baseName}-${version}-deobf.${extension}"
}

task srcJar(type: Jar) {
    from(sourceSets.main.java)
    classifier = 'sources'
    archiveName = "${baseName}-${version}-sources.${extension}"
}

artifacts {
    archives deobfJar, srcJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version build_version
            from components.java

            artifact deobfJar {
                classifier 'deobf'
            }
            artifact srcJar {
                classifier 'sources'
            }
        }
    }

    repositories {
        maven {
            url "file://" + System.getenv("LOCAL_MAVEN")
        }
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
